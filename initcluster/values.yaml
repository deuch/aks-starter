# Default values for initcluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

cluster:
  name: "myakscluster"
  env: "prod"

approlereader:
  name: "AppReader" # Reader Role for app in namespace

approlewriter:
  name: "AppWriter" # Writer Role for app in namespace

clusterapprolereader:
  name: "ClusterAppReader" # Read Role for app in cluster

ingress-nginx:
  enabled: true
  keyvault:
    name: # Keyvault name where certificate is stored
    secretName: # Secret Name in KV
  userAssignedIdentityID: # ManagedIdentity to retrieve certificates in kV
  tenantID: # Tenand ID
  controller:
    image:
      registry: registry.k8s.io
      image: ingress-nginx/controller
      tag: "v1.2.1"
    scope:
      enabled: false # Cluster wide ingress controller
    replicaCount: 2
    topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app.kubernetes.io/instance: ingress-nginx-internal
    service:
      enableHttp: false # Disable HTTP
      external:
        enabled: false # Disable public IP of Load Balancer
      internal:
        enabled: true # Enable private IP of Load Balancer
        annotations:
          service.beta.kubernetes.io/azure-load-balancer-internal: "true" # Private load balancer
          service.beta.kubernetes.io/azure-load-balancer-internal-subnet: # Subnet where Load Balancer will be deployed
    extraArgs:
      default-ssl-certificate: "ingress/wildcard-ssl" # Use the same certificate for all ingress
    extraVolumes:
    - name: secrets-store-inline # CSI driver for KV used to retrieve the certificate
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: "ingress-wildcard-ssl"
    extraVolumeMounts:
    - name: secrets-store-inline
      mountPath: "/mnt/secrets-store"
      readOnly: true  
        


 
